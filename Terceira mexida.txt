const int max_pontos = 10;
int botoes[4] = { 4, 3, 2, 1 };
int leds[4] = { 9, 8, 7, 6 };
int nivel = 1;
int sequencia[max_pontos];
int sequencia_jogador[max_pontos];
bool gameOver=false;

bool verificar_sequencia(int aux,int sequencia[max_pontos]){
  for(int i=0;i<4;i++){
    if(aux!=sequencia[i]){
      gameOver = true;
      break;
      //como a gente pode fzr o jogo recomeÃ§ar?
    }
    else{
      if(i==3){
        nivel++;
      }
    }
  }
}

int btn_pressionado(){
  int pressionado;
  bool aux = false;
  while (!aux) {
    for (int i = 0; i < 4; i++) {
      pressionado = digitalRead(botoes[i]);
      if (pressionado) {
        digitalWrite(leds[i], HIGH);
        delay(100); 
        while (pressionado) {
        }
        digitalWrite(leds[i], LOW);
        return i;
      }
      delay(20);
    }
  }
}


void piscar_led(){
  for(int i = 0; i<nivel;i++){
    digitalWrite(leds[sequencia[i]],HIGH);
    delay(1000);
    digitalWrite(leds[sequencia[i]],LOW);
    delay(500);
  }
}

void setup() {
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(4, INPUT);
  pinMode(3, INPUT);
  pinMode(2, INPUT);
  pinMode(1, INPUT);
  randomSeed(analogRead(A0));

}

void loop() {
  int aux;
  for(int i=0;i<nivel;i++){
    sequencia[i]=random(4);
  }
  piscar_led();
  aux = btn_pressionado();
  verificar_sequencia(aux,sequencia[max_pontos]);
  delay(100);
}