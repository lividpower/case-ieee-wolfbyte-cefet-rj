// Declaração das variáveis globais do programa
const int max_pontos = 10;
int notas[4] = {262, 294, 330, 349}; // Notas musicais que serão utilizadas para o acionamento dos botões
int botoes[4] = {4, 3, 2, 1};
int leds[4] = {9, 8, 7, 6};
int nivel = 0;
int sequencia[max_pontos] = {};
int sequencia_jogador[max_pontos];
bool gameOver = false;
int jogada = 0;
int* ponteiro_pressionado;
int inicio = 0;

void aperta_comeco() // Função que permite o reinício do jogo de forma correta
{
    // Removido o loop while e a verificação de gameOver
    for (int i = 0; i <= 3; i++)
    {
        if (digitalRead(botoes[i]) == HIGH)
            break;
    }
}

bool verificacao() 
{
    int resultado;
    resultado = *ponteiro_pressionado;
    if (sequencia[jogada] != resultado) 
    {
        // Perdeu
        for (int i = 0; i <= 3; i++) 
        {
            digitalWrite(leds[i], HIGH);
            tone(10, 70);
            delay(100);
            digitalWrite(leds[i], LOW);
            noTone(10);
        }
        return gameOver = true;
    }
    return false;
}

void nivel_seguinte() 
{
    int aleatorio = random(4);
    sequencia[nivel] = aleatorio;
    nivel++;
}

void btn_pressionado() 
{
    int pressionado = 0;
    for (int i = 0; i < nivel; i++) 
    {
        bool aux = false;
        while (!aux) 
        {
            for (int i = 0; i <= 3; i++) 
            {
                if (digitalRead(botoes[i]) == HIGH) 
                {
                    pressionado = i;
                    digitalWrite(leds[i], HIGH);
                    delay(18);
                    tone(10, notas[i]);
                    delay(300);
                    digitalWrite(leds[i], LOW);
                    noTone(10);
                    aux = true;
                }
            }
        }
        ponteiro_pressionado = &pressionado;
        if (verificacao())
            break;
        jogada++;
    }
    jogada = 0;
}

void piscar_led() 
{
    for (int i = 0; i < nivel; i++) 
    {
        digitalWrite(leds[sequencia[i]], HIGH);
        tone(10, notas[sequencia[i]]);
        delay(500);
        digitalWrite(leds[sequencia[i]], LOW);
        noTone(10);
        delay(100);
    }
}

void setup() // Declaração dos pinos do ARDUINO
{
    pinMode(10, OUTPUT); // Buzzer
    pinMode(6, OUTPUT); // Led amarelo
    pinMode(7, OUTPUT); // Led verde
    pinMode(8, OUTPUT); // Led azul
    pinMode(9, OUTPUT); // Led vermelho
    pinMode(4, INPUT); // Botão vermelho
    pinMode(3, INPUT); // Botão azul
    pinMode(2, INPUT); // Botão verde
    pinMode(1, INPUT); // Botão amarelo
    randomSeed(analogRead(A0)); // Geração de uma semente randômica para evitar que o jogo reinicia de forma padronizada
}

void loop() 
{
    aperta_comeco();
    nivel_seguinte();
    piscar_led();
    btn_pressionado();
    if (gameOver == true) 
    {
        sequencia[max_pontos] = {};
        nivel = 0;
        jogada = 0;
        gameOver = false;
        inicio = 0;
        delay(2000);
    }
    aperta_comeco();
    delay(1000);
}
